{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","App","useState","todosFromServer","usersFromServer","find","setTodos","setTitle","setUser","hasTitleError","setHasTitleError","hasChangeError","setHasChangeError","findTheBiggestId","theBiggestId","forEach","onSubmit","event","preventDefault","trim","currentUser","type","placeholder","value","onChange","validation","target","replace","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVCC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OAAQA,EAEJ,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKL,OAA7C,SACGK,EAAKP,OAGR,sBAAMQ,UAAU,WAAhB,2BCLOE,EAA4B,SAAC,GAAD,QACvCC,KACEZ,EAFqC,EAErCA,GACAI,EAHqC,EAGrCA,MACAC,EAJqC,EAIrCA,UACAG,EALqC,EAKrCA,KALqC,OAQvC,0BAEE,UAASR,EACTS,UAAWI,IAAW,WAAY,CAChC,sBAAuBR,IAJ3B,UAOE,oBAAII,UAAU,kBAAd,SACGL,IAEH,cAAC,EAAD,CACEI,KAAMA,MAVHR,ICVIc,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASN,UAAU,WAAnB,SACGM,EAAMC,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKZ,UCMX,IAAMiB,EAAgB,WAC3B,MAA0BC,mBAPnBC,EAAgBH,KAAI,SAAAJ,GAAI,kCAC1BA,GAD0B,IAE7BJ,KAAMY,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKR,KAAOY,EAAKN,gBAKtD,mBAAOS,EAAP,KAAcO,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOd,EAAP,KAAcmB,EAAd,KACA,EAAwBL,mBAAS,GAAjC,mBAAOV,EAAP,KAAagB,EAAb,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KAqBMC,EAAmB,WACvB,IAAIC,EAAe,EAQnB,OANAf,EAAMgB,SAAQ,SAAAnB,GACRA,EAAKZ,GAAK8B,IACZA,EAAelB,EAAKZ,OAIjB8B,EAAe,GA0BxB,OACE,sBAAKrB,UAAU,MAAf,UACE,+CAEA,uBAAMuB,SA3Be,SAACC,GACxBA,EAAMC,iBA1BD1B,GAASJ,EAAM+B,SACb3B,GACHoB,GAAkB,GAGfxB,EAAM+B,QACTT,GAAiB,IAIdlB,GAAQJ,EAAM+B,SAsBrBb,EAAS,GAAD,mBAEDP,GAFC,CAGJ,CACEf,GAAI6B,IACJzB,QACAC,WAAW,EACXC,OAAQE,EACRA,KAAMY,EAAgBC,MAAK,SAAAe,GAAW,OAAIA,EAAYpC,KAAOQ,SA7CnEe,EAAS,IACTC,EAAQ,KAwDN,UACE,qBAAKf,UAAU,QAAf,SACE,kCACG,UACD,uBACE4B,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOnC,EACPoC,SAAU,SAACP,GACT,IAAMQ,EAAaR,EAAMS,OAAOH,MAC7BI,QAAQ,4BAAmB,IAE9BpB,EAASkB,GACTf,GAAiB,MAGpBD,GACC,sBAAMhB,UAAU,QAAhB,uCAON,qBAAKA,UAAU,QAAf,SACE,kCACG,SACD,yBACE,UAAQ,aACR8B,MAAO/B,EACPgC,SAAU,SAACP,GACTT,GAASS,EAAMW,cAAcL,OAC7BX,GAAkB,IALtB,UAQE,wBACEW,MAAM,IACNM,UAAQ,EAFV,2BAOCzB,EAAgBJ,KAAI,SAAAoB,GACnB,OACE,wBAEEG,MAAOH,EAAYpC,GAFrB,SAIGoC,EAAYnC,MAHRmC,EAAYpC,UAQxB2B,GACC,sBAAMlB,UAAU,QAAhB,uCAKN,wBACE4B,KAAK,SACL,UAAQ,eAFV,oBAQF,yBAAS5B,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUM,MAAOA,UCrJzB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.28dc2c02.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (user\n    ? (\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    ) : (\n      <span className=\"UserInfo\">\n        Unknown user\n      </span>\n    ));\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => (\n  <article\n    key={id}\n    data-id={id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {title}\n    </h2>\n    <UserInfo\n      user={user}\n    />\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n// import { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nexport function usersInTodos(): Todo[] {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId),\n  }));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(usersInTodos());\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasChangeError, setHasChangeError] = useState(false);\n\n  const resetInputSFields = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const checkEmptyFileds = () => {\n    if (!user || !title.trim()) {\n      if (!user) {\n        setHasChangeError(true);\n      }\n\n      if (!title.trim()) {\n        setHasTitleError(true);\n      }\n    }\n\n    return user && title.trim();\n  };\n\n  const findTheBiggestId = () => {\n    let theBiggestId = 0;\n\n    todos.forEach(todo => {\n      if (todo.id > theBiggestId) {\n        theBiggestId = todo.id;\n      }\n    });\n\n    return theBiggestId + 1;\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!checkEmptyFileds()) {\n      return;\n    }\n\n    setTodos(\n      [\n        ...todos,\n        {\n          id: findTheBiggestId(),\n          title,\n          completed: false,\n          userId: user,\n          user: usersFromServer.find(currentUser => currentUser.id === user),\n        },\n      ],\n    );\n\n    resetInputSFields();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                const validation = event.target.value\n                  .replace(/[^a-zа-я\\s\\d]/gi, '');\n\n                setTitle(validation);\n                setHasTitleError(false);\n              }}\n            />\n            {hasTitleError && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={user}\n              onChange={(event) => {\n                setUser(+event.currentTarget.value);\n                setHasChangeError(false);\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(currentUser => {\n                return (\n                  <option\n                    key={currentUser.id}\n                    value={currentUser.id}\n                  >\n                    {currentUser.name}\n                  </option>\n                );\n              })}\n            </select>\n            {hasChangeError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}